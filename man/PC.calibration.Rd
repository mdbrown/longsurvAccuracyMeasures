% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PC.calibration.R
\name{PC.calibration}
\alias{PC.calibration}
\title{Assess calibration of a partly conditional model}
\usage{
PC.calibration(pc.object, newdata, prediction.time, conditioning.time.window,
  n.groups = 10, alpha = 0.05, plot = TRUE, silent = FALSE)
}
\arguments{
\item{pc.object}{output from PC.Cox or PC.GLM functions in the 'partlyconditional' R package used to fit partly conditional Cox/GLM models.}

\item{newdata}{data.frame with new data for which to estimate summary measures. All variables used to fit the PC.Cox/PC.GLM model must be present. Observations with missing data will be removed.}

\item{prediction.time}{numeric value of prediction time (from conditioning.time into the future) to estimate future risk. Prediction time should be on the same scale as the measurement time and the survival times provided to fit the partly conditional model.}

\item{conditioning.time.window}{Time. All measurement times in newdata exceeding this conditioning time will be removed from analysis (and a message will be produced if silent = FALSE).}

\item{n.groups}{number of groups to bin observations (using predicted risks) to calculate}

\item{alpha}{alpha level for confidence interval calculations. Default is 0.05 for 95\% confidence intervals.}

\item{plot}{set to TRUE to generate a plot of}

\item{silent}{set to TRUE to hide messages printed from function. Default is silent = FALSE.}
}
\value{
a list with two elements

\item{observed}{tibble consisting of }
}
\description{
Assess model calibration for a partly conditional (PC) model fit using the 'partlyconditional' R package. For 'newdata' consisting of a time-to-event outcome and longitudinal marker information on a set of individuals up to a fixed time window (conditioning.time.window), this function calculates the predicted risks from the model at a specified future landmark prediction time ('prediction.time'). It then bins observations using the percentiles of predicted risk (use 'n.groups' to set how many bins) and calculates observed risk using the Kaplan-Meier estimator. KM-based confidence intervals for observed risk are also provided.
}
\examples{

library(partlyconditional)
library(longsurvAccuracyMeasures)
data(pc_data)

pc.model.1 <-  PC.Cox(
 id = "sub.id",
 stime = "time",
 status = "status",
 measurement.time = "meas.time",
 markers = c("marker", "marker_2"),
 data = pc_data,
 use.BLUP = c(FALSE, FALSE),
 knots.measurement.time = NA)

pc.model.1

calibration.result <- PC.calibration( pc.model.1,
                                     newdata = pc_data,
                                     conditioning.time.window = c(18, 24),
                                     prediction.time = 12,
                                     n.groups = 8)
calibration.result$observed
calibration.result$predicted

}
