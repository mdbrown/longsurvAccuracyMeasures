% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PC.calibration.R
\name{PC.calibration}
\alias{PC.calibration}
\title{Check calibration of a partly conditional model}
\usage{
PC.calibration(pc.object, newdata, prediction.time, conditioning.time.window,
  n.groups = 10, alpha = 0.05, plot = TRUE, silent = FALSE)
}
\arguments{
\item{pc.object}{output from PC.Cox or PC.GLM functions in the 'partlyconditional' R package used to fit partly conditional Cox/GLM models.}

\item{newdata}{data.frame with new data for which to estimate summary measures. All variables used to fit the PC.Cox/PC.GLM model must be present. Observations with missing data will be removed.}

\item{prediction.time}{numeric value of prediction time (from conditioning.time) to estimate future risk. Prediction time should be on the same scale as the measurement time and the survival times provided to fit the partly conditional model.}

\item{conditioning.time.window}{Time. All measurement times in newdata exceeding this conditioning time will be removed from analysis (and a message will be produced if silent = FALSE).}

\item{alpha}{alpha level for confidence interval calculations. Default is 0.05 for 95\% confidence intervals.}

\item{silent}{set to TRUE to hide messages printed from function. Default is silent = FALSE.}
}
\value{
tibble consisting of estimates for prediction error, AUC, true positive fraction (TPF), false positive fraction (FPF), positive predictive value (PPV), negative predictive value (NPV), proportion of cases followed (PCF), proportion needed to follow-up (PNF), proportion high risk, and outcome prevalence.
}
\description{
Check model calibration for a partly conditional (PC) model fit using the 'partlyconditional' R package.  Given validation data consisting of a time-to-event outcome and longitudinal marker information on a set of individuals up to a fixed time window (conditioning.time.window), this function assesses model calibration for for risks estimated at a specified future landmark prediction time ('prediction.time').
}
\examples{

library(partlyconditional)
library(longsurvAccuracyMeasures)
data(pc_data)

pc.model.1 <-  PC.Cox(
 id = "sub.id",
 stime = "time",
 status = "status",
 measurement.time = "meas.time",
 markers = c("marker", "marker_2"),
 data = pc_data,
 use.BLUP = c(FALSE, FALSE),
 knots.measurement.time = NA)

pc.model.1


}
